#include <LiquidCrystal.h>

// IR sensor pins
#define IR_SEND_PIN 2
#define IR_RECEIVE_RAW A0
#define IR_RECEIVE_AMP A1

// LED Pins
#define BLUE_LED 6
#define GREEN_LED 7
#define RED_LED 9

// LCD pin connections: RS, E, D4, D5, D6, D7
LiquidCrystal lcd(12, 11, 5, 4, 3, 8);

int rawValue = 0, ampValue = 0;
long sumRaw = 0, sumAmp = 0;
const int totalReadings = 20;

void setup() {
  pinMode(IR_SEND_PIN, OUTPUT);
  digitalWrite(IR_SEND_PIN, HIGH);

  pinMode(BLUE_LED, OUTPUT);
  pinMode(GREEN_LED, OUTPUT);
  pinMode(RED_LED, OUTPUT);

  digitalWrite(BLUE_LED, LOW);
  digitalWrite(GREEN_LED, LOW);
  digitalWrite(RED_LED, LOW);

  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.clear();

  // GlucoSense title and LED animation
  lcd.setCursor(3, 0);
  lcd.print("GlucoSense");

  // Turn ON all LEDs consistently
  digitalWrite(GREEN_LED, HIGH);
  digitalWrite(BLUE_LED, HIGH);
  digitalWrite(RED_LED, HIGH);

  delay(1000); // Short display for GlucoSense

  lcd.clear();

  // Scroll "Collecting IR Data" quickly like bus text
  String scrollText = "Collecting IR Data... ";
  for (int i = 0; i < scrollText.length() - 15; i++) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print(scrollText.substring(i, i + 16));
    delay(80);  // Fast scroll speed like bus text
  }

  lcd.clear();
}

void loop() {
  sumRaw = 0;
  sumAmp = 0;

  // Taking readings with blinking LEDs
  for (int i = 0; i < totalReadings; i++) {
    rawValue = analogRead(IR_RECEIVE_RAW);
    ampValue = analogRead(IR_RECEIVE_AMP);

    sumRaw += rawValue;
    sumAmp += ampValue;

    // Show data on LCD in mV
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Data: ");
    lcd.print(ampValue * 6);
    lcd.print(" mV");

    // Blink LEDs one by one during each reading
    digitalWrite(GREEN_LED, HIGH); delay(70); digitalWrite(GREEN_LED, LOW);
    digitalWrite(BLUE_LED, HIGH); delay(70); digitalWrite(BLUE_LED, LOW);
    digitalWrite(RED_LED, HIGH); delay(70); digitalWrite(RED_LED, LOW);

    delay(60); // Total ~270ms per loop (includes LCD update and LED blink)
  }

  float avgRaw = sumRaw / (float)totalReadings;
  float avgAmp = sumAmp / (float)totalReadings;
  float finalValue = avgAmp * 6; // Convert to mV

  Serial.print("Avg Raw DATA: "); Serial.println(avgRaw);
  Serial.print("Avg Amplified Reading: "); Serial.println(finalValue);

  // Fast LED cycle for result display
  for (int i = 0; i < 6; i++) {
    digitalWrite(GREEN_LED, HIGH); delay(60); digitalWrite(GREEN_LED, LOW);
    digitalWrite(BLUE_LED, HIGH); delay(60); digitalWrite(BLUE_LED, LOW);
    digitalWrite(RED_LED, HIGH); delay(60); digitalWrite(RED_LED, LOW);
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Avg Data: ");
  lcd.print(finalValue);
  lcd.print(" mV");

  // Scroll "Collect your Report" in second row
  String reportText = "Collect your Report ";
  for (int i = 0; i < reportText.length() - 15; i++) {
    lcd.setCursor(0, 1);
    lcd.print(reportText.substring(i, i + 16));
    delay(80); // Same speed as previous scroll
  }
  
  delay(1000); // Small pause after scrolling

  // Goodbye screen with all LEDs ON together
  lcd.clear();
  lcd.setCursor(4, 0);
  lcd.print("Goodbye :)");
  Serial.println("Goodbye :)");

  // Turn on all LEDs together during Goodbye
  digitalWrite(GREEN_LED, HIGH);
  digitalWrite(BLUE_LED, HIGH);
  digitalWrite(RED_LED, HIGH);

  delay(2000); // Keep LEDs on during goodbye

  digitalWrite(GREEN_LED, LOW);
  digitalWrite(BLUE_LED, LOW);
  digitalWrite(RED_LED, LOW);

  while (1); // Halt
}